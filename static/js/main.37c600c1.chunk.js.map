{"version":3,"sources":["components/Common/Flex.tsx","components/ExchangeRatesTable/ExchangeRatesTableHeader.tsx","components/ExchangeRatesTable/TableRow.tsx","components/ExchangeRatesTable/ExchangeRatesTableBody.tsx","components/ExchangeRatesTable/ExchangeRatesTable.tsx","utils.ts","components/CurrencyConverterForm.tsx","config/index.ts","api/currency.ts","components/Common/Title.tsx","App.tsx","index.tsx"],"names":["FlexStyled","styled","div","props","direction","align","justify","margin","Flex","THeadStyled","thead","THStyled","th","ExchangeRatesTableHeader","currencyTableHeaders","map","item","ColumnStyled","td","TableRow","row","rowItem","i","ExchangeRatesTableBody","currencyTableRows","TableWrapperStyled","TableStyled","table","ExchangeRatesTable","convertToNumber","value","Number","replace","FormStyled","form","LabelStyled","label","InputStyled","input","SelectStyled","select","CurrencyConverterForm","currencyRatesMap","outputCurrencyCodes","Object","keys","useState","inputAmount","setInputAmount","outputAmount","setOutputAmount","outputCurrencyCode","setOutputCurrencyCode","calculateOutput","rate","toFixed","useEffect","type","name","min","onChange","e","target","disabled","calculateInput","code","config","api","baseUrl","currencyRatesEndpointTxt","withCredentials","getCurrencyRates","a","axios","get","result","data","console","log","TitleStyled","h1","Title","children","AppWrapper","App","useQuery","isLoading","isError","error","message","textData","items","split","headers","values","filter","valueArr","forEach","amount","currencyCode","currencyRate","hasOwnProperty","getCurrencyData","className","Global","createGlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.37c600c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IFlexProps } from '../../interfaces/IFlexProps';\r\n\r\nconst FlexStyled = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: ${(props: IFlexProps) => props.direction || 'row'};\r\n\talign-items: ${(props: IFlexProps) => props.align || 'stretch'};\r\n\tjustify-content: ${(props: IFlexProps) => props.justify || 'stretch'};\r\n\tmargin: ${(props: IFlexProps) => props.margin || '0'};\r\n`\r\nconst Flex: React.FC<IFlexProps> = (props) => {\r\n\treturn <FlexStyled {...props} />;\r\n};\r\n\r\nexport default Flex;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IExchangeRatesTableProps } from '../../interfaces/IExchangeRatesTableProps';\r\n\r\nconst THeadStyled = styled.thead`\r\n`\r\nconst THStyled = styled.th`\r\n\tbackground: #d367a1;\r\n\tpadding: 20px;\r\n\ttext-align: left;\r\n\tborder-bottom: 0.1px dashed white;\r\n\tposition: sticky;\r\n  top: 0;\r\n`\r\n\r\nconst ExchangeRatesTableHeader: React.FC<IExchangeRatesTableProps> = ({currencyTableHeaders = []}) => {\r\n\treturn (\r\n\t\t<THeadStyled>\r\n\t\t\t<tr>\r\n\t\t\t\t{ currencyTableHeaders.map(item => <THStyled key={item} >{item}</THStyled>) }\r\n\t\t\t</tr>\r\n\t\t</THeadStyled>\r\n\t);\r\n};\r\n\r\nexport default ExchangeRatesTableHeader;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ICurrencyTableRowProps } from '../../interfaces/ICurrencyTableRowProps';\r\n\r\nconst ColumnStyled = styled.td`\r\npadding: 20px;\r\ntext-align: left;\r\nborder-bottom: 0.1px dashed white;\r\n`\r\n\r\nconst TableRow: React.FC<ICurrencyTableRowProps> = ({row}) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t{row.map((rowItem: string, i: number) => <ColumnStyled key={i} >{rowItem}</ColumnStyled>)}\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport { IExchangeRatesTableProps } from '../../interfaces/IExchangeRatesTableProps';\r\nimport TableRow from './TableRow';\r\n\r\n\r\nconst ExchangeRatesTableBody: React.FC<IExchangeRatesTableProps> = ({currencyTableRows = []}) => {\r\n\treturn (\r\n\t\t<tbody>\r\n\t\t\t{ currencyTableRows.map(row => <TableRow key={row[3]} row={row} />)}\r\n\t\t</tbody>\r\n\t);\r\n};\r\n\r\nexport default ExchangeRatesTableBody;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ExchangeRatesTableHeader from './ExchangeRatesTableHeader';\r\nimport ExchangeRatesTableBody from './ExchangeRatesTableBody';\r\nimport { IExchangeRatesTableProps } from '../../interfaces/IExchangeRatesTableProps';\r\n\r\nconst TableWrapperStyled = styled.div`\r\n\toverflow-y: auto;\r\n\toverflow-x: hidden;\r\n  height: 410px;\r\n`\r\nconst TableStyled = styled.table`\r\n\tborder-collapse: collapse;        \r\n\twidth: 100%;\r\n\r\n`\r\n\r\nexport const ExchangeRatesTable: React.FC<IExchangeRatesTableProps> = ({currencyTableHeaders, currencyTableRows}) => {\r\n\r\n\treturn (\r\n\t\t<TableWrapperStyled>\r\n\t\t\t<TableStyled>\r\n\t\t\t\t<ExchangeRatesTableHeader currencyTableHeaders={currencyTableHeaders} />\r\n\t\t\t\t<ExchangeRatesTableBody currencyTableRows={currencyTableRows} />\r\n\t\t\t</TableStyled>\r\n\t\t</TableWrapperStyled>\r\n\t);\r\n}\r\n\r\nexport default ExchangeRatesTable;","import { ICurrencyRatesMap } from \"./interfaces/ICurrencyRatesMap\";\r\n\r\nexport const ConvertTextToJson = (data: string) => data.split('\\n');\r\n\r\nexport const getCurrencyRatesHeaders = (items: string[]) => items[1].split('|');\r\n\r\nexport const convertToNumber = (value: string) => {\r\n\treturn typeof value === 'string' ? Number(value.replace(/,/, '.')) : value;\r\n}\r\n\r\nexport const getCurrencyData = (textData: any) => {\r\n\tconst items = ConvertTextToJson(textData);\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tconst [ _info, headers, ...values] = items;\r\n\tlet currencyRatesMap: ICurrencyRatesMap = {};\r\n\r\n\tconst currencyTableHeaders = headers.split('|');\r\n\tconst currencyTableRows = values.filter(item => !!item).map(valueArr => valueArr.split('|'));\r\n\tcurrencyTableRows.forEach(row => {\r\n\t\tconst amount = +row[2];\r\n\t\tconst currencyCode = row[3];\r\n\t\tconst currencyRate = Number(row[4].replace(/,/, '.'));\r\n\t\tif (!currencyRatesMap.hasOwnProperty(currencyCode)) {\r\n\t\t\tcurrencyRatesMap[currencyCode] = currencyRate / amount;\r\n\t\t}\r\n\t})\r\n\r\n\treturn { currencyTableHeaders, currencyTableRows, currencyRatesMap };\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { IExchangeRatesTableProps } from '../interfaces/IExchangeRatesTableProps';\r\nimport { convertToNumber } from '../utils';\r\n\r\nconst FormStyled = styled.form`\r\n\tpadding: 20px;\r\n`\r\nconst LabelStyled = styled.label`\r\n\tpadding-right: 10px;\r\n\tfont-size: 25px;\r\n`\r\nconst InputStyled = styled.input`\r\n\ttext-align: center;\r\n\tmax-width: 200px;\r\n\tborder-radius: 5px;\r\n\tborder-width: 0.7px;\r\n\tmargin: 10px 20px;\r\n\topacity: 0.5;\r\n\tbackground-color: transparent;\r\n\ttext-align: center;\r\n\tfont-size: 40px;\r\n\tcolor: white;\r\n\t::-webkit-inner-spin-button {\r\n\t\t-webkit-appearance: none;\r\n\t\tmargin: 0;\r\n\t}\r\n\t:focus-visible{\r\n\t\toutline: none;\r\n\t\topacity: 0.7;\r\n\t\tcolor: black;\r\n\t}\r\n`\r\nconst SelectStyled = styled.select`\r\n\tfont-size: 25px;\r\n\tborder-radius: 5px;\r\n\tborder-color: transparent;\r\n\tbackground-color: transparent;\r\n\tvertical-align: super;\r\n\tmargin: 0 10px;\r\n\topacity: 0.5;\r\n\t:focus-visible{\r\n\t\toutline: none;\r\n\t\topacity: 0.7;\r\n\t\tcolor: black;\r\n\t}\r\n`\r\n\r\nconst CurrencyConverterForm: React.FC<IExchangeRatesTableProps> = ({currencyRatesMap = {}}) => {\r\n\tconst outputCurrencyCodes = Object.keys(currencyRatesMap);\r\n\tconst [inputAmount, setInputAmount] = useState(100);\r\n\tconst [outputAmount, setOutputAmount] = useState(100);\r\n\tconst [outputCurrencyCode, setOutputCurrencyCode] = useState(outputCurrencyCodes[0])\r\n\r\n\r\n\tconst calculateOutput = (inputAmount: number) => {\r\n\t\tconst rate: number = currencyRatesMap[outputCurrencyCode];\r\n\t\tconst outputAmount: number = convertToNumber((inputAmount / rate).toFixed(2));\r\n\t\tsetOutputAmount(outputAmount);\r\n\t}\r\n\r\n\tconst calculateInput = (outputAmount: number) => {\r\n\t\tconst rate: number = currencyRatesMap[outputCurrencyCode];\r\n\t\tconst inputAmount: number = convertToNumber((outputAmount * rate).toFixed(2));\r\n\t\tsetInputAmount(inputAmount);\r\n\t}\r\n\t\r\n\tconst handleOutputCurrencyCodeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n\t\tsetOutputCurrencyCode(e.target.value);\r\n\t}\r\n\r\n\tconst handleInputAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst inputAmount = convertToNumber(e.target.value);\r\n\r\n\t\tif (e.target.value) {\r\n\t\t\tsetInputAmount(inputAmount);\r\n\t\t\tcalculateOutput(inputAmount);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOutputAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst outputAmount = convertToNumber(e.target.value);\r\n\t\tif (e.target.value) {\r\n\t\t\tsetOutputAmount(outputAmount);\r\n\t\t\tcalculateInput(outputAmount);\r\n\t\t}\r\n\t}\r\n\r\nuseEffect(() => {\r\n\tcalculateOutput(inputAmount);\r\n// eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [outputCurrencyCode]);\r\n\r\n\treturn (\r\n\t\t<FormStyled>\r\n\t\t\t<LabelStyled>\r\n\t\t\t<InputStyled\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tname=\"converterInputValue\"\r\n\t\t\t\tvalue={inputAmount}\r\n\t\t\t\tmin={1}\r\n\t\t\t\tonChange={handleInputAmountChange}\r\n\t\t\t/>\r\n\t\t\t<SelectStyled disabled>\r\n\t\t\t\t\t<option value=\"CZK\">CZK</option>\r\n\t\t\t\t</SelectStyled>\r\n\t\t\t</LabelStyled>\r\n\t\t\t<br />\r\n\t\t\t<LabelStyled>\r\n\t\t\t\t<InputStyled\r\n\t\t\t\t\tonChange={handleOutputAmountChange}\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tname=\"converterOutputAmount\"\r\n\t\t\t\t\tvalue={outputAmount}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectStyled\r\n\t\t\t\t\tname=\"currencyCodesList\"\r\n\t\t\t\t\tonChange={handleOutputCurrencyCodeChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{outputCurrencyCodes.map(code => <option key={code} value={code}>{code}</option>)}\r\n\t\t\t\t</SelectStyled>\r\n\t\t\t</LabelStyled>\r\n\t\t</FormStyled>\r\n\t);\r\n};\r\n\r\nexport default CurrencyConverterForm;","const config = {\r\n\tapi: {\r\n\t\tbaseUrl: '/',\r\n\t\tcurrencyRatesEndpointTxt: '/cs/financni-trhy/devizovy-trh/kurzy-devizoveho-trhu/kurzy-devizoveho-trhu/denni_kurz.txt',\r\n\t\twithCredentials: true,\r\n\t}\r\n};\r\n\r\nexport default config;","import axios, { AxiosResponse } from \"axios\";\r\nimport config from \"../config\";\r\n\r\nexport const getCurrencyRates = async (): Promise<string|undefined> => {\r\n\ttry {\r\n\t\tconst result: AxiosResponse = await axios.get(config.api.currencyRatesEndpointTxt);\r\n\t\treturn result?.data;\r\n\t} catch (error) {\r\n\t\tconsole.log('An error occured, #api/getCurrencyRates:', error)\r\n\t}\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TitleStyled = styled.h1`\r\ncolor: white;\r\npadding-bottom: 50px;\r\n`\r\n\r\nconst Title: React.FC = ({children}) => {\r\n\treturn (\r\n\t\t<TitleStyled>\r\n\t\t\t{children}\r\n\t\t</TitleStyled>\r\n\t);\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, UseQueryResult } from 'react-query'\r\n\r\nimport Flex from './components/Common/Flex';\r\nimport ExchangeRatesTable from './components/ExchangeRatesTable/ExchangeRatesTable';\r\nimport CurrencyConverterForm from './components/CurrencyConverterForm';\r\nimport { getCurrencyRates } from './api/currency';\r\nimport { getCurrencyData } from './utils';\r\nimport Title from './components/Common/Title';\r\n\r\nconst AppWrapper = styled.div`\r\n\twidth: 100%;\r\n\tmin-height: 100vh;\r\n\tpadding: 2rem;\r\n\tbackground-image: linear-gradient(to right, #fc5c7d, #6a82fb);\r\n\tcolor: white;\r\n`\r\n\r\nfunction App() {\r\n\tconst { isLoading, isError, data, error }: UseQueryResult<string, Error> = useQuery('currencyRates', getCurrencyRates);\r\n\t\r\n\tif (isLoading) {\r\n\t\treturn <span>Loading...</span>\r\n\t}\r\n\r\n\tif (isError) {\r\n\t\treturn <span>`Error: ${error?.message}`</span>\r\n\t}\r\n\r\n\tconst { currencyTableHeaders = [], currencyTableRows, currencyRatesMap } = getCurrencyData(data);\r\n\r\n  return (\r\n    <AppWrapper className=\"App\">\r\n      <Flex justify=\"center\">\r\n\t\t\t\t<Title>Currency converter</Title>\r\n\t\t\t</Flex>\r\n\t\t\t<Flex justify=\"space-around\">\r\n\t\t\t\t<ExchangeRatesTable\r\n\t\t\t\t\tcurrencyTableHeaders={currencyTableHeaders}\r\n\t\t\t\t\tcurrencyTableRows={currencyTableRows}\r\n\t\t\t\t/>\r\n\t\t\t\t<CurrencyConverterForm currencyRatesMap={currencyRatesMap}/>\r\n\t\t\t</Flex>\r\n\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { QueryClientProvider, QueryClient } from 'react-query';\r\n\r\nimport App from './App';\r\n\r\nconst Global = createGlobalStyle`\r\n* {\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tbox-sizing: border-box;\t\r\n\tfont-family: consolas;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n\t\twidth: 8px;\r\n\t}\r\n\r\n\t::-webkit-scrollbar-track {\r\n  background: #f1f1f12e;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #ae7a857a;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #d367a1;\r\n}\r\n`\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\t\t<QueryClientProvider client={queryClient}>\r\n\t\t\t<Global />\r\n\t\t\t<App />\r\n\t\t</QueryClientProvider>\r\n\t\t\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}